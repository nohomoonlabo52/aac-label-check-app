name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
      - develop

jobs:
  # 本番環境へのデプロイ用ジョブ
  deploy_production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Inject Production Firebase Config
        run: |
          CONFIG_VALUE=$(echo "${{ secrets.FIREBASE_CONFIG_PRODUCTION }}" | tr -d '\n\r')
          for file in *.html; do
            if grep -q "const firebaseConfig = {};" "$file"; then
              sed -i "s|const firebaseConfig = {};|const firebaseConfig = ${CONFIG_VALUE};|" "$file"
            fi
          done
      - name: Deploy to Firebase Hosting (Production)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AAC_LABEL_CHECK_APP }}'
          projectId: aac-label-check-app
          channelId: live

  # テスト環境へのデプロイ用ジョブ
  deploy_development:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      - name: Inject Development Firebase Config
        run: |
          CONFIG_VALUE=$(echo "${{ secrets.FIREBASE_CONFIG_DEVELOPMENT }}" | tr -d '\n\r')
          for file in *.html; do
            if grep -q "const firebaseConfig = {};" "$file"; then
              sed -i "s|const firebaseConfig = {};|const firebaseConfig = ${CONFIG_VALUE};|" "$file"
            fi
          done
      - name: Deploy to Firebase Hosting (Development)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AAC_LABEL_CHECK_APP_DEV }}'
          projectId: aac-label-check-app-dev
          channelId: live
