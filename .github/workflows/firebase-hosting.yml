name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
      - develop

jobs:
  # 本番環境へのデプロイ用ジョブ
  deploy_production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Inject Production Firebase Config
        # 環境変数として秘密の情報を読み込む
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_PRODUCTION }}
        run: |
          # 全てのHTMLファイルで、目印の行を環境変数の内容に置き換える
          for file in *.html; do
            if grep -q "const firebaseConfig = {};" "$file"; then
              # 特殊文字の問題を避けるため、一時ファイルを経由する
              echo "const firebaseConfig = ${FIREBASE_CONFIG};" > config.js
              sed -i -e '/const firebaseConfig = {};/r config.js' -e '/const firebaseConfig = {};/d' "$file"
            fi
          done
      - name: Deploy to Firebase Hosting (Production)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AAC_LABEL_CHECK_APP }}'
          projectId: aac-label-check-app
          channelId: live

  # テスト環境へのデプロイ用ジョブ
  deploy_development:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      - name: Inject Development Firebase Config
        # 環境変数として秘密の情報を読み込む
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_DEVELOPMENT }}
        run: |
          # 全てのHTMLファイルで、目印の行を環境変数の内容に置き換える
          for file in *.html; do
            if grep -q "const firebaseConfig = {};" "$file"; then
              # 特殊文字の問題を避けるため、一時ファイルを経由する
              echo "const firebaseConfig = ${FIREBASE_CONFIG};" > config.js
              sed -i -e '/const firebaseConfig = {};/r config.js' -e '/const firebaseConfig = {};/d' "$file"
            fi
          done
      - name: Deploy to Firebase Hosting (Development)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AAC_LABEL_CHECK_APP_DEV }}'
          projectId: aac-label-check-app-dev
          channelId: live
